{
  "name": "get-random-values",
  "version": "1.1.1",
  "description": "`window.crypto.getRandomValues` with fallback to Node.js crypto",
  "keywords": [
    "crypto"
  ],
  "repository": {
    "type": "git",
    "url": "KenanY/get-random-values"
  },
  "license": "MIT",
  "author": {
    "name": "Kenan Yildirim",
    "email": "kenan@kenany.me",
    "url": "http://kenany.me/"
  },
  "main": "index.js",
  "files": [
    "index.js",
    "LICENSE.txt"
  ],
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "dependencies": {
    "global": "^4.2.1"
  },
  "devDependencies": {
    "lodash.foreach": "^2.4.1",
    "lodash.isfunction": "^2.4.1",
    "tape": "^2.14.0"
  },
  "browser": {
    "crypto": false
  },
  "testling": {
    "files": "test/*.js",
    "browsers": [
      "chrome/11..latest",
      "firefox/21..latest",
      "safari/4.0..latest",
      "opera/15.0..latest",
      "iphone/6",
      "ipad/6"
    ]
  },
  "readme": "# get-random-values\n\n[![Build Status](https://img.shields.io/travis/KenanY/get-random-values.svg)](https://travis-ci.org/KenanY/get-random-values)\n[![Dependency Status](https://img.shields.io/gemnasium/KenanY/get-random-values.svg)](https://gemnasium.com/KenanY/get-random-values)\n\n`window.crypto.getRandomValues` or `window.msCrypto.getRandomValues` or\n`require('crypto').randomBytes` or an _Error_.\n\n[![testling badge](https://ci.testling.com/KenanY/get-random-values.png)](https://ci.testling.com/KenanY/get-random-values)\n\n## Example\n\n``` javascript\nvar getRandomValues = require('get-random-values');\n\nvar array = new Uint32Array(10);\ngetRandomValues(array);\n// => [\n// =>   183,\n// =>   76,\n// =>   18,\n// =>   177,\n// =>   73,\n// =>   9,\n// =>   50,\n// =>   248,\n// =>   216,\n// =>   104\n// => ]\n```\n\n## Installation\n\n``` bash\n$ npm install get-random-values\n```\n\n## API\n\n``` javascript\nvar getRandomValues = require('get-random-values');\n```\n\n### `getRandomValues(buf)`\n\nFills integer-based _TypedArray_ `buf` with cryptographically random numbers.\nChecks for and uses the first of the following:\n\n  - `window.crypto.getRandomValues`\n  - `window.msCrypto.getRandomValues`\n  - Node.js crypto\n\nIf none of the above are available, then an _Error_ is thrown.\n\nThrows _QuotaExceededError_ if `buf.length > 65536` (even if Node.js crypto,\nwhich doesn't have that limit, is being used).",
  "readmeFilename": "README.md",
  "_id": "get-random-values@1.1.1",
  "dist": {
    "shasum": "9c3f51f58e99ed050b8c4eb3a87848da24044f11"
  },
  "_from": "get-random-values@",
  "_resolved": "https://registry.npmjs.org/get-random-values/-/get-random-values-1.1.1.tgz"
}
